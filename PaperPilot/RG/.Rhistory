# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( LN_Price ~  BVE + LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( LN_Price ~  BVE + LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
# Import
data <- read.csv("data_6m.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE  + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( LN_Price ~  BVE  + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( LN_Price ~  BVE  + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
# Import
data <- read.csv("data_6m.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~  BVE  + LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  BVE  + LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
View(data)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~  BVE  + LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  BVE  + LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data_6m.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA <- factor(data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
data$LNPrice<-log(data$Price)
data$KY <- factor(data$KY)
data$RPA_Count_sq<-data$RPA_Count*data$RPA_Count
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
# Winsorize each continuous variable
data$BVE <- winsorize(data$BVE)
data$LNAT <- winsorize(data$LNAT)
data$NIS <- winsorize(data$NIS)
data$LN_RPA_Count <- winsorize(data$LN_RPA_Count)
data$RPA_Count <- winsorize(data$RPA_Count)
data$RPA_Count_sq<-data$RPA_Count*data$RPA_Count
# Now, perform the Huber regression or any regression analysis using winsorized variables
model <- lm(Price ~ BVE + LNAT + NIS + RPA_Count + Year + Industry, data = data)
summary(model)
# Now, perform the Huber regression or any regression analysis using winsorized variables
model <- lm(Price ~ BVE + LNAT + NIS + RPA_Count + RPA_Count_sq + Year, data = data)
summary(model)
setwd("C:/Users/financerpa/Desktop/PaperPilot/PaperPilot/RG")
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
history(max.show=Inf)
data$PBRatio<-data$Price/data$BVE
library(MatchIt)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~ LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~ LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
View(data_PSM)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~ LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
setwd("C:/Users/financerpa/Desktop/PaperPilot/PaperPilot/RG")
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
library(MatchIt)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~ LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
setwd("C:/Users/financerpa/Desktop/PaperPilot/PaperPilot/RG")
data <- read.csv("data.csv", na.strings = "#N/A")
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$NB<-as.numeric(data$NB)
data$PBRatio <- data$Price/data_PSM$BVE
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$NB<-as.numeric(data$NB)
data$PBRatio <- data$Price/data_PSM$BVE
data <- na.omit(data)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$NB<-as.numeric(data$NB)
data$PBRatio <- data$Price/data_PSM$BVE
data <- na.omit(data)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ NB + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ NB  + Year + Industry   , data = data, method = "nearest")
library(MatchIt)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$NB<-as.numeric(data$NB)
data$PBRatio <- data$Price/data_PSM$BVE
data <- na.omit(data)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ NB + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ NB  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$NB <- winsorize(data_PSM$NB)
data_PSM$PBRatio <- winsorize(data_PSM$PBRatio)
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~ NB + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  NB + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ LNAT + NIS + Year + Industry, data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ LNAT + NIS  + Year + Industry   , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,10)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
data_PSM$PBRatio <- data_PSM$Price/data_PSM$BVE
#!!!跟finance有交互作用RRRR
matched_regression1 <- lm( PBRatio ~ LNAT + NIS + Year + Industry * RPA   , data = data_PSM)
summary(matched_regression1)
matched_regression2 <- lm( PBRatio ~  LNAT + NIS + Year + Industry + RPA    , data = data_PSM)
summary(matched_regression2)
