# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA  , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance  , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA  , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance  , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA  , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$RPA <- factor(data$RPA)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance  , data = data)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance  , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA  , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(LN_Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(LN_Price ~ BVE + LNAT + NIS + Year + Finance + RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance + RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(LN_Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
# Import
data <- read.csv("data.csv", na.strings = "#N/A")
# Remove NA
data <- na.omit(data)
data$Year <- factor(data$Year)
data$KY <- factor(data$KY)
data$Finance <- factor(data$Finance)
data$Industry <- factor(data$Industry)
data$BVE<-as.numeric(data$BVE)
data$NIS<-as.numeric(data$NIS)
# 假設你的資料框架名為 data
ps_model <- glm(RPA ~ BVE + LNAT + NIS + Year + Finance + KY , data = data)
# 提取傾向分數
data$propensity_score <- predict(ps_model, type = "response")
# 執行傾向分數匹配
matched_data <- matchit(RPA ~ BVE + LNAT + NIS  + Year + Finance + KY , data = data, method = "nearest")
# 從匹配物件中提取匹配後的資料框架
data_PSM <- match.data(matched_data)
# Winsorize each continuous variable
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data_PSM$RPA <- factor(data_PSM$RPA)
data_PSM$Price <- winsorize(data_PSM$Price)
data_PSM$BVE <- winsorize(data_PSM$BVE)
data_PSM$LNAT <- winsorize(data_PSM$LNAT)
data_PSM$NIS <- winsorize(data_PSM$NIS)
data_PSM$LN_RPA_Count <- winsorize(data_PSM$LN_RPA_Count)
data_PSM$RPA_Count <- winsorize(data_PSM$RPA_Count)
data_PSM$RPA_Count_sq<-data_PSM$RPA_Count*data_PSM$RPA_Count
data_PSM$LN_Price<-log(data_PSM$Price,2)
data_PSM$RPA_Count_sqrt<-data_PSM$RPA_Count^0.5
#!!!跟finance有交互作用RRRR
matched_regression <- lm(Price ~ BVE + LNAT + NIS + Year + Finance * RPA + KY , data = data_PSM)
summary(matched_regression)
