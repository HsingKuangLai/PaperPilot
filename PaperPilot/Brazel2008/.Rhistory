data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( ABSDA^0.2 ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( ABSDA^(1/6) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( log(ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA)^0.222 ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA)^(2/9) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
library("lmtest")
##Normality of Residuals
residuals <- residuals(model)
ks_test_result <- ks.test(residuals, "pnorm")
print(ks_test_result)
min(data$ABSDA)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Plot residuals vs. fitted values
plot(model$fitted.values, residuals(model),
xlab = "Fitted Values", ylab = "Residuals",
main = "Residuals vs. Fitted Values")
abline(h = 0, col = "red", lty = 2)  # Add a horizontal line at 0
# Plot residuals vs. observation order
plot(residuals(model), main = "Residuals vs. Order", ylab = "Residuals")
abline(h = 0, col = "red", lty = 2)  # Add a horizontal line at 0
library(robustbase)
model <- (lmrob( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Fit the robust linear model
model <- lmrob(formula = (ABSDA) ~ RPA + (LGTA + LEV + OCF + MTB) + Year, data = data, method = "MM")
# Extract robustness weights
weights <- weights(model)
# Identify outliers with weights less than a threshold (e.g., 0.01)
outliers <- which(weights < 0.01)
# Display the outliers
outlier_data <- data[outliers, ]
# Fit the robust linear model
model <- lmrob(formula = (ABSDA) ~ RPA + (LGTA + LEV + OCF + MTB) + Year, data = data, method = "MM")
# Identify outliers using the outlier function
outliers <- outlier(model, type = "robustness")
# Fit the robust linear model
model <- lmrob(formula = (ABSDA) ~ RPA + (LGTA + LEV + OCF + MTB) + Year, data = data, method = "MM")
# Extract robustness weights
robustness_weights <- attr(model$robweights, "robustness.weights")
# Identify outliers based on a threshold (e.g., 0.01)
outliers <- which(robustness_weights < 0.01)
# Display the outliers
outlier_data <- data[outliers, ]
View(outlier_data)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
pairs(data[, c("LGTA", "LEV", "OCF", "MTB")])
pairs(data[, c("ABSDA",LGTA", "LEV", "OCF", "MTB")])
pairs(data[, c("ABSDA","LGTA", "LEV", "OCF", "MTB")])
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( 1/(ABSDA)^3 ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA)^3 ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
Generate a QQ plot for residuals
qqnorm(residuals(model))
qqline(residuals(model), col = 2)  # Add a reference line
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值
data <- na.omit(data)
data$RPA_Ctd <- factor(data$RPA_Ctd)
data$RPA <- factor(data$RPA)
data$Industry <- factor(data$Industry)
#data$Year <- factor(data$Year)
data$Finance <- factor(data$Finance)
data$ABSDA<-as.numeric(data$ABSDA)
data$OCF<-as.numeric(data$OCF)
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$DA<-winsorize(data$DA)
data$ABSDA<-winsorize(data$ABSDA)
data$LGTA<-winsorize(data$LGTA)
data$LEV<-winsorize(data$LEV)
data$OCF<-winsorize(data$OCF)
data$MTB<-winsorize(data$MTB)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain,
#Now, perform the Huber regression or any regression analysis using winsorized variables+ Year + Industry
model <- (lm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
##
library(sandwich)
coeftest(model, vcov = vcovHC(model, type="HC3"))
library(MASS, lib.loc = "C:/Program Files/R/R-4.3.2/library")
model <- (rlm( (ABSDA) ~ RPA + ( LGTA + LEV + OCF + MTB ) + Year  , data = data))
summary(model)
