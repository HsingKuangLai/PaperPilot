winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (rlm((MVE) ~ RPA  + ( (BVE) + (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
2014000*2/(1405791-1324875)
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (rlm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (rlm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
1671335-1726368
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (lm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
cor.test(data$RPA,data$MVE)
cor.test(data$RPA,data$OS)
cor.test(data$RPA,data$BVE)
cor.test(data$RPA,data$Equity)
cor.test(data$RPA,data$Asset)
cor.test(data$RPA,data$Earnings)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
cor.test(data$RPA,data$Asset)
cor.test(data$RPA,data$OS)
cor.test(data$RPA,data$Equity)
cor.test(data$RPA,data$Earnings)
cor.test(data$RPA,data$NetDiv)
cov(data$RPA,data$MVE)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (lm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
covratio(model)
summary(aov(MVE,RPA,data=data))
summary(aov(data$MVE,data$RPA,data=data))
summary(aov(MVE ~ RPA,data=data))
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE/data$OS
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
summary(aov(MVE ~ RPA,data=data))
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE/data$S
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
summary(aov(MVE ~ RPA,data=data))
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)
data$MVE<-data$MVE/data$S
data$BVE<-data$BVE
data$Earnings<-data$Earnings
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (lm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)/data$S
data$MVE<-data$MVE/data$S
data$BVE<-data$BVE/data$S
data$Earnings<-data$Earnings/data$S
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (lm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
summary(aov(MVE~RPA,data=data))
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)/data$OS
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)/data$OS
data$MVE<-data$MVE/data$OS
data$BVE<-data$BVE/data$OS
data$Earnings<-data$Earnings/data$OS
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (lm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
# 讀取 CSV 檔案，將 "#N/A" 轉換為真正的 NA（缺失值）
data <- read.csv("data.csv", na.strings = "#N/A")
# 移除含有缺失值的觀測值data$RPA <- factor(data$RPA)
data <- na.omit(data)
data$RPA <- (data$RPA)/data$OS
data$Year <- factor(data$Year)
data$Industry <- factor(data$Industry)
data$Finance <- factor(data$Finance)
data$NetDiv<-as.numeric(data$NetDiv)/data$OS
data$MVE<-data$MVE/data$OS
data$BVE<-data$BVE/data$OS
data$Earnings<-data$Earnings/data$OS
data$ADV<-as.numeric(data$ADV)
data$RD<-as.numeric(data$RD)
data$BM<-as.numeric(data$BM)
data$DB<-(data$Asset-data$Equity)/data$Asset
data <- na.omit(data)
############################### winsorizing 1% greater (But equal to dummy)
# Define a function for winsorizing
winsorize <- function(x) {
p1 <- quantile(x, probs = 0.01)  # 1st percentile value
p99 <- quantile(x, probs = 0.99)  # 99th percentile value
x[x < p1] <- p1  # Replace values below 1st percentile
x[x > p99] <- p99  # Replace values above 99th percentile
return(x)
}
data$RPA<-winsorize(data$RPA)
data$MVE<-winsorize(data$MVE)
data$BVE<-winsorize(data$BVE)
data$Earnings<-winsorize(data$Earnings)
data$NetDiv<-winsorize(data$NetDiv)
data$ADV<-winsorize(data$ADV)
data$RD<-winsorize(data$RD)
data$ROA<-winsorize(data$ROA)
data$LGTA<-log(winsorize(data$Asset))
data$S<-winsorize(data$S)
data$SG<-winsorize(data$SG)
data$DB<-winsorize(data$DB)
data$BM<-winsorize(data$BM)
data$RPA_Count<-winsorize(data$RPA_Count)
#1 Remove BVE and LN(MVE)
#2 Remain, BVE +
#Now, perform the Huber regression or any regression analysis using winsorized variables + ADV + RD  + ROA + S + SG + BM
model <- (lm((MVE) ~ RPA  + ( (Earnings + NetDiv) + DB + ROA + BM + RD ) + LGTA + Year + Industry , data = data))
summary(model)
